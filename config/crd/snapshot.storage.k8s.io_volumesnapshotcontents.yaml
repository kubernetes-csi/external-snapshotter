
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: volumesnapshotcontents.snapshot.storage.k8s.io
spec:
  group: snapshot.storage.k8s.io
  names:
    kind: VolumeSnapshotContent
    plural: volumesnapshotcontents
  scope: ""
  validation:
    openAPIV3Schema:
      description: VolumeSnapshotContent represents the actual "on-disk" snapshot
        object in the underlying storage system
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec represents the desired state of the snapshot content
          properties:
            csiVolumeSnapshotSource:
              description: CSI (Container Storage Interface) represents storage that
                handled by an external CSI Volume Driver (Alpha feature).
              properties:
                creationTime:
                  description: Timestamp when the point-in-time snapshot is taken
                    by the underlying storage system. This timestamp will be generated
                    and returned by the CSI volume driver after the snapshot is cut.
                    The format of this field is a Unix nanoseconds time encoded as
                    an int64. On Unix, the command `date +%s%N` returns the current
                    time in nanoseconds (aka, epoch time) since 1970-01-01 00:00:00
                    UTC. This field is required in the CSI spec however made optional
                    here to support static binding.
                  format: int64
                  type: integer
                driver:
                  description: Driver is the name of the driver used to create a physical
                    snapshot on underlying storage system. This MUST be the same name
                    returned by the CSI GetPluginName() call for that driver. Required.
                  type: string
                restoreSize:
                  description: When restoring a volume from a snapshot, the volume
                    size needs to be equal to or larger than the RestoreSize if it
                    is specified. If RestoreSize is set to nil, in the dynamic snapshot
                    creation case, it means that the underlying storage system does
                    not have this information available; in the static binding case,
                    this piece of information is not available.
                  format: int64
                  type: integer
                snapshotHandle:
                  description: SnapshotHandle is the unique id returned from the underlying
                    storage system by the CSI driver's CreationSnapshot gRPC call.
                    It serves as the only and sufficient handle when communicating
                    with underlying storage systems via CSI driver for all subsequent
                    calls on the specific VolumeSnapshot Required.
                  type: string
              required:
              - driver
              - snapshotHandle
              type: object
            deletionPolicy:
              description: DeletionPolicy defines whether a VolumeSnapshotContent
                and its associated physical snapshot on underlying storage system
                should be deleted or not when released from its corresponding VolumeSnapshot.
                If not specified, the default will be VolumeSnapshotContentRetain
                for static binding, and VolumeSnapshotContentDelete for dynamic snapshot
                creation.
              type: string
            persistentVolumeRef:
              description: PersistentVolumeRef represents the PersistentVolume that
                the snapshot has been taken from. In dynamic snapshot creation case,
                the field will be specified when VolumeSnapshot and VolumeSnapshotContent
                are bound.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            volumeSnapshotRef:
              description: VolumeSnapshotRef is part of bi-directional binding between
                VolumeSnapshot and VolumeSnapshotContent. Expect to be non-nil when
                bound. VolumeSnapshot.VolumeSnapshotContentName is the authoritative
                bind between VolumeSnapshot and VolumeSnapshotContent
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
